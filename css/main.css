/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}.wraper{width:675px;margin:0 auto}.ov-flov{overflow:hidden}.logo{height:80px;background:linear-gradient(to bottom, #769715, #99cc01)}.logo p{color:white;font-size:32px;opacity:100;line-height:14.16px;font-weight:400;padding-top:27px;padding-left:35px;margin:0}nav ul{display:flex;justify-content:space-around}nav ul li{list-style-type:none;background:url(../img/arrow-copy-3.png) left no-repeat;padding:10px 25px}nav ul li:first-child{background:none}nav ul li a{text-decoration:none;font-size:20px;font-style:Regular;font-weight:400;line-height:14.16px;color:#093500;padding-top:10px}nav ul li a:hover{opacity:0.7}.wellcom-section{overflow:hidden;background-color:#eeeefb}.wellcom-section #wellcom-content,.wellcom-section #about-section #about-block,#about-section .wellcom-section #about-block{float:right;padding-right:34px;padding-left:34px}.wellcom-section #wellcom-content img,.wellcom-section #about-section #about-block img,#about-section .wellcom-section #about-block img{float:left;margin-top:-10%}.wellcom-section #wellcom-content div,.wellcom-section #about-section #about-block div,#about-section .wellcom-section #about-block div{margin-top:-180px;float:right}.wellcom-section #wellcom-content div h1,.wellcom-section #about-section #about-block div h1,#about-section .wellcom-section #about-block div h1{padding-right:76px;font-size:32px;color:#093500;line-height:14.16px;font-weight:400;style:regular}.wellcom-section #wellcom-content div p,.wellcom-section #about-section #about-block div p,#about-section .wellcom-section #about-block div p{float:right;width:323px;height:67px;font-size:10px;font-family:Tahoma;style:regular;font-weight:400;line-height:14px;color:#093500}.wellcom-section #wellcom-content div p span,.wellcom-section #about-section #about-block div p span,#about-section .wellcom-section #about-block div p span{font-size:11px;style:bold;font-weight:700;color:#80a60f}#about-section{border-bottom:2px solid #ecf0fb;background:url(../img/arrow-.png) left bottom no-repeat}#about-section #about-block{margin-top:10px;padding-right:20px;border-right:1px solid #ecf0fb;float:left}#about-section #about-block h2{font-size:20px;font-family:Myriad Pro;style:Regular;font-weight:400;line-height:14.16px;color:#093500}#about-section #about-block p{width:205px;height:165px;font-size:10px;font-family:Tahoma;style:regular;font-weight:400;line-height:14px;color:#093500}#about-section #about-block p span{font-size:11px;style:bold;font-weight:700;color:#80a60f}#about-section .two-news-block{float:left;width:calc(675px - 205px - 47px);padding-left:25px}#about-section .two-news-block #services-block{padding-top:7px}#about-section .two-news-block div{border-bottom:1px solid #ecf0fb;display:inline-block}#about-section .two-news-block div .news-content{display:inline-block;padding-left:21px}#about-section .two-news-block div .news-content h2{font-size:20px;font-family:Myriad Pro;font-weight:400;line-height:14.16px;color:#093500}#about-section .two-news-block div .news-content p{width:210px;font-size:10px;font-family:Tahoma;style:Regular;font-weight:400;line-height:14px;color:#093500}#about-section .two-news-block div .news-content p span{font-size:11px;style:bold;font-weight:700;color:#80a60f}footer #coppiriting{font-size:10px;font-family:Tahoma;font-weight:400;line-height:20.29px;color:#093500}@media (max-width: 767px) and (min-width: 700px){body{margin:0 5%}body .wraper{width:100%}body .wraper nav{margin:0 5%}body .wraper nav ul{width:100%;display:inline-block;text-align:center;padding:0}body .wraper nav ul li{display:inline-block}main #about-section #about-block{width:35%}main #about-section .two-news-block{width:55%}main #about-section .two-news-block .news-content{width:50%}}@media (max-width: 700px) and (min-width: 600px){.wraper{width:100%}.wraper nav{margin:0 5%}.wraper nav ul{width:100%;display:inline-block;text-align:center;padding:0}.wraper nav ul li{display:inline-block}#about-section{background-position-x:4%}#about-section #about-block{width:25%;padding-left:5%}#about-section #about-block p{width:100%}#about-section .two-news-block{width:55%}#about-section .two-news-block div .news-content{width:40%}#about-section .two-news-block div .news-content p{width:100%}footer p{margin-left:6%}}@media (max-width: 600px){.wraper{width:100%}.wraper .logo p{text-align:center;padding-left:0}.wraper nav{margin:0 5%}.wraper nav ul{width:100%;display:inline-block;text-align:center;padding:0}.wraper nav ul li{display:inline-block}main .wellcom-section #wellcom-content,main .wellcom-section #about-section #about-block,#about-section main .wellcom-section #about-block{padding:0}main .wellcom-section #wellcom-content img,main .wellcom-section #about-section #about-block img,#about-section main .wellcom-section #about-block img{float:inherit;width:90%}main .wellcom-section #wellcom-content p,main .wellcom-section #about-section #about-block p,#about-section main .wellcom-section #about-block p{padding-bottom:7%}main .wellcom-section #wellcom-content div,main .wellcom-section #about-section #about-block div,#about-section main .wellcom-section #about-block div{float:inherit;margin-top:0px}main .wellcom-section #wellcom-content div h1,main .wellcom-section #about-section #about-block div h1,#about-section main .wellcom-section #about-block div h1{text-align:center;padding:0;line-height:35px}main .wellcom-section #wellcom-content div p,main .wellcom-section #about-section #about-block div p,#about-section main .wellcom-section #about-block div p{height:auto;width:70%;margin:0 auto;float:none;text-align:center}#about-section{background-position-x:4%}#about-section div{margin-top:5%}#about-section div #about-block{width:100%;padding:0;text-align:center}#about-section div #about-block p{height:auto;width:70%;margin:0 auto}#about-section .two-news-block{width:100%;padding:0}#about-section .two-news-block div{text-align:center;width:100%}#about-section .two-news-block div img{width:50%}#about-section .two-news-block div .news-content{width:100%;padding:0 0 5%}#about-section .two-news-block div .news-content p{text-align:center;width:70%;margin:0 auto}footer{text-align:center}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
